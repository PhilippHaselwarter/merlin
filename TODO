DONE Add command to parse up to next definition
DONE Handle warnings properly
DONE Handle arguments in partial let's
DONE In [type,expression], detect constructors and just print their definition
DONE List modules on load path, even not loaded ones
DONE Configure script: check for packages
DONE Traverse parse tree to find node nearest to a given location
DONE Editor integration : allow to retrieve definition boundary to improve synchronisation
DONE Fix pretty printing of type variables
DONE Rework handling of errors and warnings: generalize use of "catch" pattern
DONE (in type-error branch) Hack typer: give type (forall a. a) to unbound values and ill-typed expressions
- Prevent recording of type information (see Typecore.type_expect')
- Write documentation:
  - External API
  - VIM mode
  - EMACS mode ?
  - Internal design
- Move path management to a dedicated module
- Pretty(ugly)-print hacked parse-trees for debugging purposes
  to extract as much information as possible.
- Use inotify to detect cmi changes.
- Handle mli files
- Bugfix: « :TypeOf » on a label returns « error: Chunk_parser.Error »
- Class are completely ignored in current release:
  add support for object system.
- When closing a module, merlin goes back to its opening then retype the
  whole module in one pass. This triggers quadratic behavior with nested
  modules.
  We should manually reimplement "packing" of final typedtree / signature.
  (This is a prerequesite for first class modules support).
